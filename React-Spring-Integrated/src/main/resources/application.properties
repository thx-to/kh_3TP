spring.application.name=totalproject

# Import .env file
spring.config.import=optional:file:.env[.properties]

server.port=8111

# My SQL Database Setting
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/coditor?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
spring.datasource.username=root
spring.datasource.password=1234
# ElasticSearch cluster (need to set up the authentication information later)
spring.data.elasticsearch.cluster-name=elasticsearch
spring.data.elasticsearch.cluster-nodes=http://localhost:9200

# JPA Setting
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type.descriptor.sql=trace
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.use_temp_table=false
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# Database Connection Pool
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=30000

# Spring devtools setting
spring.devtools.restart.enabled=true
spring.devtools.restart.poll-interval=1000
spring.devtools.restart.quiet-period=500
spring.devtools.livereload.enabled=true
spring.devtools.restart.additional-paths=src/main/java

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG

flask.url=${FLASK_URL}
react.url=http://localhost:3000
jwt.secret-key=${JWT_SECRET}

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SMTP_USERNAME}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

#Google OAuth2 Login
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile, email, openid
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:3000/login/oauth2/code/google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs


#Kakao OAuth2 Login
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.scope=profile, email
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code  # ??
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:3000/login/oauth2/code/kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.jwk-set-uri=https://kauth.kakao.com/oauth/jwk

# Naver OAuth2 Login
naver.client-id=X_BBB0DjfcyGQrl7o9jD
naver.client-secret=x7vJqnzwBL
naver.redirect-uri=http://localhost:3000/auth/naver/callback
#naver.redirect-uri=http://localhost:3000/callback

spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE

# Database record initialize
spring.jpa.defer-datasource-initialization = true
spring.sql.init.mode = always
